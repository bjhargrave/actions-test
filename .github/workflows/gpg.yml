name: GPG

on:
  push:
    paths-ignore:
    - '.github/**/*ci*'
  pull_request:
    paths-ignore:
    - '.github/**/*ci*'

env:
  LC_ALL: en_US.UTF-8

defaults:
  run:
    shell: bash

jobs:
  GPG_Test:
    name: GPG Test
    runs-on: ubuntu-latest
    steps:
    - name: Check GPG key
      run: |
        echo "${{ startsWith( env.GPG_PRIVATE_KEY, '-----BEGIN PGP PRIVATE KEY BLOCK-----' ) }} : GPG key is a private key"
        echo "${{ startsWith( env.GPG_PRIVATE_KEY, '-----BEGIN PGP PUBLIC KEY BLOCK-----' ) }} : GPG key is a public key"
      env:
        GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
        PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
    - name: Import GPG key
      id: import_gpg
      uses: bjhargrave/ghaction-import-gpg@master
      env:
        GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
        PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
    - name: GPG key information
      run: |
        echo "fingerprint: ${{ steps.import_gpg.outputs.fingerprint }}"
        echo "keyid:       ${{ steps.import_gpg.outputs.keyid }}"
        echo "name:        ${{ steps.import_gpg.outputs.name }}"
        echo "email:       ${{ steps.import_gpg.outputs.email }}"
        gpg --list-keys
    - name: GPG agent test
      run: |
        echo "default-cache-ttl 7200" >>/home/runner/.gnupg/gpg-agent.conf
        echo "max-cache-ttl 31536000" >>/home/runner/.gnupg/gpg-agent.conf
        echo "allow-preset-passphrase" >>/home/runner/.gnupg/gpg-agent.conf
        cat /home/runner/.gnupg/gpg-agent.conf
        gpg-connect-agent "RELOADAGENT" /bye
        KEYGRIP=`gpg --batch --with-colons --with-keygrip --list-secret-keys ${{ steps.import_gpg.outputs.fingerprint }} | grep -m 1 grp | sed -E -e 's/(grp|:)//g'`
        echo $KEYGRIP
        HEXPASS=`xxd -pu <<< ${{ env.PASSPHRASE }}`
        echo $HEXPASS
      env:
        GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
        PASSPHRASE: <&xxx"yyy'>
